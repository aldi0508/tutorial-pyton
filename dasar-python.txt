### Command Prompt ###
1. melihat versi python
  python --version
2. melihat folder di python
  dir
3. menggunakan python
  python
4. selesai menggunakan python
  ctrl+z enter

### Comment ###
agar tulisan yang dibuat tidak ditampilkan
# ini adalah komen
""" ini adalah multiline komen """

### Syntak Dasar ###
1. menampilkan syntak
  print()

### Tipe data ###
1. integer (angka satuan ngga ada komanya)
  data_int = 10
2. float (angka dengan koma)
  data_float = 3.4
3. string (kumpulan karakter)
  data_str = "ucup 10"
4. boolean (biner true/false) hanya menampilkan 2 hal tersebut
  data_bool = True
5. List (hasil diapit dengan kurung siku [ ] ) = isi bisa diubah
list(“buku”) → ['b', 'u', 'k', 'u'];
list((1, 2, 3)) → [1, 2, 3] = data int
list({1, 3, 6, 3}) → [1, 3, 6] = data int
6. Tuple (hasil diapit dengan kurung biasa ( ) ) = isi tidak bisa diubah
tuple(“buku”) → ('b', 'u', 'k', 'u');
tuple((1, 2, 3)) → (1, 2, 3)
tuple({1, 3, 6, 3}) → (1, 3, 6)
7. Set (hasil data INT diapit dengan { } dan hanya menampilkan data yang unik) = pada data INT langsung diurutkan ((3,2,1)) menjadi {1,2,3}
set(“buku”) → ['b', 'k', 'u']; = data unik didahulukan
set((1, 2, 3)) → {1, 2, 3} = data unik didahulukan
set([1, 3, 6, 3]) → {1, 3, 6} = data unik didahulukan
8. Melihat type data
print(type(biodata))
#fungsi untuk mengecek jenis tipe data. akan tampil <class 'dict'> yang berarti dict adalah tipe data dictionary

### Casting Data ###
Merubah satu tipe data ke tipe data lain
Hal yang perlu diperhatikan :
1. int
  - data bool akan "False" jika nilai data int = 0
2. float
  - data int akan dibulatkan ke bawah
  - data bool akan "False" jika nilai data float = 0
3. str
  - data bool akan "False" jika nilai data str = ""

### Input User ###
Hal yang perlu diperhatikan :
  - output dai input user selalu dalam bentuk str
  - penggunaan input user pada data biner (bool) dilakukan dengan meng-casting data pada 'int' terlebih dahulu
    contoh : biner = bool(int(input("data boolean = ")))

### Operasi Aritmatika ###
1. Penjumlahan (+)
2. Pengurangan (-)
3. Perkalian (*)
4. Pembagian (/)
5. Eksponen / pangkat (**)
6. Modulus / sisa pembagian (%)
7. Floor division / pembulatan kebawah (//)
8. Prioritas operasi
  - ( )
  - Eksponen **
  - Perkalian DKK *, /, %, //
  - Penjumlahan dan pengurangan +, -
  
  ### Latihan Perhitungan Sederhana ###
  1. Konversi temperatur
  C > R = 4/5 C
  C > F = 9/5 C + 32
  C > K = C + 273
  R > C = 5/4 R
  R > F = 9/4 R + 32
  R > K = 5/4 R + 273
  F > C = 5/9 (F-32)
  F > R = 4/9 (F-32)
  K > C = K - 273
  K > R = 4/5 (K-273)
 
 ### Operasi Komparasi ###
 Hal yang perlu diperhatikan :
 - Hasil selalu Boolean
 - Operasi komparasi : >, <, ==, !=, >=, <=, is, is not
 - is dan is not untuk komparasi obyek identity
 - melihat memori
  - id ( )
  - hex ( )
  
  ### Operasi Logika / Boolean ###
  not, or, and, xor
  Hal yang perlu diperhatikan :
  - NOT = kebalikan data awal
  - OR = jika ada true maka true
  - AND = jika ada false maka false
  - XOR = jika beda maka true (pakai tanda ^)
  
  ### Operasi Bitwise ###
  Operasi biner atau binary
  - Bitwise OR (|)
  co. print('nilai = ', c, ', binary = ', format(c, '08b')) = fungsi 'format' untuk melihat nilai bitwise
  - Bitwise AND (&)
  - Bitwise XOR (^)
  - Bitwise NOT (~)
  # Bitwise NOT (jadi negatif)
  c = ~ a
  # Bitwise NOT (kebalikan/flip)
  pakai XOR (^)
  d = 0b0000001011
  e = 0b1111111111
  print('nilai = ', d^e, ', binary = ', format(d^e, '08b'))
  
  - Bitwise Shifting
  Right (>>)
  Left (<<)
  
  # Shifting
c = a >> 2 (geser ke kanan 2x)
d = b << 1 (geser ke kiri 1x)

  ### Operator Assigment (Penyingkatan) ###
- Operasi Aritmatika
Co.
  a = 5
  - a += 5 (penjumlahan)
  - a -= 3 (pengurangan)
  - a *= 5 (perkalian)
  - a /= 4 (pembagian)
  - a %= 2 (modulus)
  - a //= 2 (floor division)
  - a **= 2 (perpangkatan)

- Operasi Bitwise
# OR
Co. 
  c = True
  c |= False (menjadi True)
# AND 
  Co.
  c = True
  c |= False (menjadi False)
# XOR
  Co.
  c = True
  c ^= False (menjadi True)
# Shifting
  Co.
  c = 0b00100
    print("nilai d", format (c, '05b')) = mengetahui format data
  c >>= 2 (geser ke kanan 2 kali, menjadi 00001)
  c <<= 1 geser ke kiri 1 kali, menjadi 01000)

### Pengenalan String ###
1. menggunakan single quote '...'
2. menggunakan double quote "..."
3. menggunakan tanda \
 co. membuat tanda ' menjadi str
     print('ini hari jum\'at')
4. Backlash
  co. print(c\\user\\ucup) menjadi c\user\ucup
5. Tab
  co. print('ucup\tkita')
6. Backspace
  co. print('ucup \bkita') menjadi ucupkita
7. Newline
  co. - \n  = line feed
      - \r  = carriage return = tidak bisa digunakan (jupyter) 
      - \r\n = line feed carriage return
8. String literal atau raw
  co. print(r'c:\user\dock') = semua menjadi str
9. Multiline literal string
  co. print("""
  nama ; ucup
  umur ; 19 tahun
  """)
10. Multiline literal string + raw
  co. print(r"""
  nama ; ucup/n
  umur ; 19 tahun/t
  """)

### Operasi dan Memanipulasi String ###

1. Menyambung String (concatenate)
nama_pertama = "Ucup"
nama_tengah = "D"
nama_akhir = "Fame"

nama_lengkap = nama_pertama + nama_tengah + nama_akhir
print(nama_lengkap)

nama_lengkap = nama_pertama + " " + nama_tengah + "'" + nama_akhir
print(nama_lengkap)

2. Menghitung panjang string
panjang = len(nama_lengkap)
print("panjang " + nama_lengkap + " adalah " + str(panjang))

3. operator untuk string

# cek apakah ada komponen pada sebuah string
d = "d"
status = d in nama_lengkap
print("apakah " + d + " ada di " + nama_lengkap + ", " + str(status))

D = "D"
status = D in nama_lengkap
print("apakah " + D + " ada di " + nama_lengkap + ", " + str(status))

x = "x"
status = x not in nama_lengkap
print("apakah " + x + " tidak ada di " + nama_lengkap + ", " + str(status))

# mengulang string
print("wk"*100)
print(100*"wk")

# indexing
print("index ke-0 : " + nama_lengkap[0]) # dimulai dari 0
print("index ke-6 : " + nama_lengkap[6]) # index bebas
print("index ke-(-1) : " + nama_lengkap[-1]) # indexing dari dibelakang
print("index ke-[6,8) : " + nama_lengkap[6:8]) # dimulai dari index 6 sampai sebelum 8
print("index ke-[0,2,4,6,8] : " + nama_lengkap[0:10:2]) # diambil index 0,2,4,6,8

# item paling kecil
print("nilai terkecil : " + min(nama_lengkap))
# item paling besar
print("nilai terbesar : " + max(nama_lengkap))

ascii_code = ord(" ")
print("ASCII number dari spasi : " + str(ascii_code))
data = 117
print("Character dari ascii code 117 : " + chr(data))

4. operator dalam bentuk method

# Count
data = "otong surotong pararotong"
jumlah = data.count("o")
print("jumlah o di " + data + " : " + str(jumlah))

# Ubah case pada string
  1. Upper case
     co. salam = 'bro'
     besar = salam.upper() = semua kata menjadi kapital
  2. Lower case
     co. salam = 'BRO'
     besar = salam.lower() = semua kata menjadi kecil

# Method is, untuk pengecekan (harus ada tanda petiknya. contoh salam = "hahah"
  1. isupper() = cek apakah upper case semua
  co. apakah_upper = salam.isupper()
  2. islower() = cek apakah lower case semua
  3. isalpha() = cek apakah huruf semua
  4. isalnum() = cek apakah huruf dan angka
  5. isdecimal() = cek apakah angka semua
  6. isspace() = cek apakah berisi spasi, tab, enter
  7. istitle() = cek apakah huruf pertama kapital atau tidak

# Startswith() dan endswith()
cek_start = "Ucup Dfame"
start = cek_start.startswith("Ucup") = cek awal kalimat ingat (starts)
end = cek_start.endswith("Dfame") = cek akhir kalimat ingat (ends)

# join() dan split()
  1. join
  co. pisah = ['aku', 'adalah', 'ucup']
      gabung = " ehm ".join(pisah) = cara membacanya yaitu ehm digabung dengan pisah
  2. split
  co. gabungan = "naikehmvespaehmkelilingehmkota"
      pisah = gabungan.split("ehm")

# Alokasi Karakter
  1. rjust
  co. kanan = "kanan".rjust(10) = rata kanan dengan 10 karakter
  2. ljust = rata kiri
  3. center = rata tengah
     co. tengah ="tengah".center(20,'-') # rata tengah dengan 20 karakter
         print("'" + tengah + "'")

# Strip() = kebalikan alokasi karakter
co. kanan = kanan.strip()
    print("'" + kanan + "'")

### 18. Format String ###
# contoh generic
# string
nama = "ucup"
format_str = f"hello {nama}"
print(format_str)

# boolean
boolean = False
format_str = f"boolean = {boolean}"
print(format_str)

# angka
angka = 2005.5
format_str = f"angka = {angka}"
print(format_str)

# bilangan bulat
angka = 15
format_str = f"bilangan bulat = {angka:d}"
print(format_str)

# bilangan dengan ordo ribuan
angka = 2000000
format_str = f"jutaan = {angka:,}"
print(format_str)

# bilangan desimal
angka = 2005.54321
format_str = f"desimal = {angka:.3f}" = 3 angka dibelakang koma = 2005.543
print(format_str)

# menampilkan leading zero
angka = 2005.54321
format_str = f"desimal = {angka:010.3f}"
print(format_str)

# menampilkan tanda + atau -
angka_minus = -10
angka_plus = +10.1234
format_minus = f"minus = {angka_minus:+d}"
format_plus = f"plus = {angka_plus:+.2f}"

print(format_minus)
print(format_plus)

# memformat persen
persentase = 0.045
format_persen = f"persen = {persentase:.2%}"

print(format_persen)

# melakukan operasi aritmatika di dalam placeholder
harga = 10000
jumlah = 5

format_string = f"harga total = Rp. {harga*jumlah:,}"
print(format_string)

# format angka lain (binary, octal, hexadecimal)

angka = 255
format_binary = f"binary = {bin(angka)}"
format_octal = f"octal = {oct(angka)}"
format_hex = f"hex = {hex(angka)}"

print(format_binary)
print(format_octal)
print(format_hex)

### 19. String width and Alignment ###
1. Enter = \n
2. Tab = \t
3. Kutip 3 = """ data """
4. rata kanan = :>5 (rata kanan 5 huruf)

### 20. If statement ###
# IF STATEMENT
# 1. IF INLINE
nama = input("siapa nama anda? ")
if nama=="ucup" : print("kamu berhasil!!")
print("terimakasih!")

# IF INDENTATION
nama = input("siapa nama anda? ")
if nama=="ucup" :
    print("kamu berhasil!!")
    print("terimakasih!")
print("Akhir Program")

# ELSE STATEMENT
nama = input("siapa nama anda? ")
if nama=="ucup" :
    print("kamu berhasil!!")
else: 
    print("Maaf kamu gagal :(")

print("Akhir Program")

# Else Statement
nama = input("Tulis Nama Anda! ")
if nama=="ucup" :
    print("Kamu berhasil")
elif nama=="dodi" :
    print("Kamu Hebat")
elif nama=="mario" :
    print("Mantap :)")
else :
    print("Anda Belum Beruntung :(")
print("Terimakasih!")
